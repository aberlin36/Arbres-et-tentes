
package fiches;

import donnees.Joueur;
import donnees.Sauvegardes;
import donnees.Sauvegardes.Element;
import donnees.Scores;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import jeux.Grille;
import jeux.Tente;

public class Jouer extends javax.swing.JDialog {

    private Joueur joueur;//joueur d'arbres et tentes
    private JButton[][] tab_boutons;//boutons formant la grille de jeu
    private Grille grille;//grille de jeu
    private int ntentes;//nombre de tentes placées dans la grille
    private int ncoups;//nombre de coups joué
    private ArrayList tentes_placees;//liste des tentes placées dans la grille
    private long heureDep, heureFin, nbreSec;//nombres de secondes
    private Scores scores;//scores enregistrés
    private Sauvegardes sauvegardes;//permet de charger et sauvegarder une grille
    //difficultes :
    private static final int facile = 1;
    private static final int moyen = 2;
    private static final int difficile = 3;
    //nombre de caractères minimum pour un nom
    private static final int min_nom = 4;
    //fichier des sauvegardes
    private static final String fichier_sauve = "sauvegardes.txt";

    //constructeur de la fiche Jouer
    public Jouer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("ARBRES ET TENTES");
        ntentes = 0;
        ncoups = 0;
        tentes_placees = new ArrayList<Tente>();
        sauvegardes = new Sauvegardes(fichier_sauve);
        Iterator<Element> i = sauvegardes.getElements().iterator();
        while (i.hasNext()) {
            cb_grilles.addItem(((Element) i.next()).getNom());
        }

        l_difficulte.setVisible(false);
        p_difficulte.setVisible(false);
        b_jouer.setVisible(false);
        b_sauve.setVisible(false);
        p_grille.setVisible(false);
        p_charger.setVisible(false);
        b_resout.setVisible(false);
        b_nouveau.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tf_nom = new javax.swing.JTextField();
        b_valider = new javax.swing.JButton();
        l_difficulte = new javax.swing.JLabel();
        p_difficulte = new javax.swing.JPanel();
        rb_facile = new javax.swing.JRadioButton();
        rb_moyen = new javax.swing.JRadioButton();
        rb_difficile = new javax.swing.JRadioButton();
        b_jouer = new javax.swing.JButton();
        p_grille = new javax.swing.JPanel();
        b_sauve = new javax.swing.JButton();
        p_charger = new javax.swing.JPanel();
        cb_grilles = new javax.swing.JComboBox();
        charger = new javax.swing.JButton();
        b_supprimer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        b_nouveau = new javax.swing.JButton();
        b_resout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Retour");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Entrez votre nom :");

        tf_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nomActionPerformed(evt);
            }
        });

        b_valider.setText("Valider");
        b_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_validerActionPerformed(evt);
            }
        });

        l_difficulte.setText("Choisissez une difficulté :");

        p_difficulte.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(rb_facile);
        rb_facile.setForeground(new java.awt.Color(51, 204, 0));
        rb_facile.setText("Facile");

        buttonGroup1.add(rb_moyen);
        rb_moyen.setForeground(new java.awt.Color(255, 153, 0));
        rb_moyen.setText("Moyen");

        buttonGroup1.add(rb_difficile);
        rb_difficile.setForeground(new java.awt.Color(255, 0, 0));
        rb_difficile.setText("Difficile");

        javax.swing.GroupLayout p_difficulteLayout = new javax.swing.GroupLayout(p_difficulte);
        p_difficulte.setLayout(p_difficulteLayout);
        p_difficulteLayout.setHorizontalGroup(
            p_difficulteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_difficulteLayout.createSequentialGroup()
                .addGroup(p_difficulteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rb_facile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(p_difficulteLayout.createSequentialGroup()
                        .addGroup(p_difficulteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rb_moyen)
                            .addComponent(rb_difficile))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        p_difficulteLayout.setVerticalGroup(
            p_difficulteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_difficulteLayout.createSequentialGroup()
                .addComponent(rb_facile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb_moyen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rb_difficile))
        );

        b_jouer.setText("Jouer");
        b_jouer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_jouerActionPerformed(evt);
            }
        });

        p_grille.setBackground(new java.awt.Color(255, 255, 255));
        p_grille.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        p_grille.setPreferredSize(new java.awt.Dimension(209, 209));

        javax.swing.GroupLayout p_grilleLayout = new javax.swing.GroupLayout(p_grille);
        p_grille.setLayout(p_grilleLayout);
        p_grilleLayout.setHorizontalGroup(
            p_grilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );
        p_grilleLayout.setVerticalGroup(
            p_grilleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );

        b_sauve.setText("Sauvegarder la grille");
        b_sauve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_sauveActionPerformed(evt);
            }
        });

        p_charger.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        charger.setText("Charger");
        charger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargerActionPerformed(evt);
            }
        });

        b_supprimer.setText("Supprimer");
        b_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_supprimerActionPerformed(evt);
            }
        });

        jLabel1.setText("Charger une grille sauvegardée :");

        jLabel3.setText("Supprimer une partie sauvegardée :");

        javax.swing.GroupLayout p_chargerLayout = new javax.swing.GroupLayout(p_charger);
        p_charger.setLayout(p_chargerLayout);
        p_chargerLayout.setHorizontalGroup(
            p_chargerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_chargerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(p_chargerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_grilles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(charger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(b_supprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(p_chargerLayout.createSequentialGroup()
                        .addGroup(p_chargerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        p_chargerLayout.setVerticalGroup(
            p_chargerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p_chargerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cb_grilles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(charger)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_supprimer)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 0));
        jLabel4.setText("GRILLE DE JEU : ");

        b_nouveau.setText("Nouveau Joueur");
        b_nouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nouveauActionPerformed(evt);
            }
        });

        b_resout.setText("Résolution de la grille");
        b_resout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_resoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(b_jouer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(p_difficulte, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b_valider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_difficulte, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tf_nom, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b_nouveau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(p_grille, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p_charger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_sauve, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_resout, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(b_sauve)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(p_charger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(p_grille, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_resout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_valider)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_difficulte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p_difficulte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_jouer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_nouveau)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //permet de revenir a la fiche d'accueil
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
        getParent().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tf_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nomActionPerformed
    }//GEN-LAST:event_tf_nomActionPerformed

    //permet de saisir le nom du joueur
    private void b_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_validerActionPerformed
        String s = new String();
        s = tf_nom.getText();
        joueur = new Joueur(s, 0);
        if (s == null | s.length() < min_nom) {
            String m = new String("Votre saisie est incorrecte !"
                    + " (" + min_nom + " caractères minimum)");
            JOptionPane.showMessageDialog(this, m);
        } else {
            tf_nom.enable(false);
            l_difficulte.setVisible(true);
            p_difficulte.setVisible(true);
            b_jouer.setVisible(true);
            b_valider.setVisible(false);
            p_charger.setVisible(true);
            b_nouveau.setVisible(true);
            tf_nom.repaint();
        }
    }//GEN-LAST:event_b_validerActionPerformed

    //génère une grille aléatoirement en fonction de la difficulte
    private void b_jouerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_jouerActionPerformed
        p_grille.removeAll();
        if (rb_facile.isSelected()) {
            grille = new Grille(facile);//on releve la difficulte
            scores = ((Accueil) getParent()).getFacile();//on charge les scores
        } else if (rb_moyen.isSelected()) {
            grille = new Grille(moyen);
            scores = ((Accueil) getParent()).getMoyen();
        } else if (rb_difficile.isSelected()) {
            grille = new Grille(difficile);
            scores = ((Accueil) getParent()).getDifficile();
        } else {//par defaut la grille est facile
            grille = new Grille(facile);
            scores = ((Accueil) getParent()).getFacile();
        }

        p_grille.setVisible(true);

        grille.VerifierGrille();

        //création des boutons
        int l = grille.getNlignes() + 1;
        int c = grille.getNcolonnes() + 1;
        GridLayout gest = new GridLayout(l, c);
        tab_boutons = new JButton[l][c];
        p_grille.setLayout(gest);
        for (int lig = 0; lig < l; lig++) {
            for (int col = 0; col < c; col++) {
                JButton cel = new JButton();
                Dimension dim = new Dimension(50, 50);
                cel.setPreferredSize(dim);
                cel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                cel.addActionListener(new java.awt.event.ActionListener() {
                    //fonction liée a chaque bouton

                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        cliquer(evt);
                    }
                });
                tab_boutons[lig][col] = cel;
                p_grille.add(cel);
            }
        }
        pack();
        grille.afficher(tab_boutons);//on affiche la grille
        b_sauve.setVisible(true);
        b_resout.setVisible(true);
        heureDep = System.currentTimeMillis();//on note le temps de depart
        ntentes = 0;
        ncoups = 0;
    }//GEN-LAST:event_b_jouerActionPerformed

    //permet de sauvegarder une grille
    private void b_sauveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_sauveActionPerformed
        if (grille != null) {
            String in = JOptionPane.showInputDialog("Entrez un nom de sauvegarde"
                    + " (" + min_nom + " caractères minimun) : ");
            if (in != null) {//on créer son nom
                String nom = null;
                String d = new String();
                if (grille.getDifficulte() == facile) {
                    d = " (Facile)";
                    nom = new String(in + d);
                } else if (grille.getDifficulte() == moyen) {
                    d = " (Moyen)";
                    nom = new String(in + d);
                } else if (grille.getDifficulte() == difficile) {
                    d = " (Difficile)";
                    nom = new String(in + d);
                }
                //on la sauvegarde dans le fichier
                boolean b = sauvegardes.ajouterGrille(nom, grille, min_nom + d.length());
                if (!b) {
                    String m = new String("Nom incorrecte !");
                    JOptionPane.showMessageDialog(this, m);
                } else {//on rajoute le nom dans la combobox
                    cb_grilles.addItem(nom);
                }
                p_grille.removeAll();
                p_grille.repaint();
            }
        }
    }//GEN-LAST:event_b_sauveActionPerformed

    //permet de charger une grille sauvegardée
    private void chargerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargerActionPerformed
        p_grille.removeAll();
        ntentes = 0;
        ncoups = 0;

        String s = (String) cb_grilles.getSelectedItem();
        if ((grille = sauvegardes.charger(s)) != null) {
            int d = grille.getDifficulte();
            if (d == facile) {
                scores = ((Accueil) getParent()).getFacile();
            } else if (d == moyen) {
                scores = ((Accueil) getParent()).getMoyen();
            } else if (d == difficile) {
                scores = ((Accueil) getParent()).getDifficile();
            }

            p_grille.setVisible(true);

            int l = grille.getNlignes() + 1;
            int c = grille.getNcolonnes() + 1;
            GridLayout gest = new GridLayout(l, c);
            tab_boutons = new JButton[l][c];
            p_grille.setLayout(gest);
            for (int lig = 0; lig < l; lig++) {
                for (int col = 0; col < c; col++) {
                    JButton cel = new JButton();
                    Dimension dim = new Dimension(50, 50);
                    cel.setPreferredSize(dim);
                    cel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                    cel.addActionListener(new java.awt.event.ActionListener() {

                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            cliquer(evt);
                        }
                    });
                    tab_boutons[lig][col] = cel;
                    p_grille.add(cel);
                }
            }
            pack();
            grille.afficher(tab_boutons);
            grille.afficher(true);
            heureDep = System.currentTimeMillis();
            b_sauve.setVisible(true);
            b_resout.setVisible(true);
        } else {
            String m = new String("Aucune grille n'est sauvegardée !");
            JOptionPane.showMessageDialog(this, m);
        }
        p_grille.repaint();//on met a jour la grille
    }//GEN-LAST:event_chargerActionPerformed

    //permet de supprimer une grille sauvegardée
    private void b_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_supprimerActionPerformed
        String s = (String) cb_grilles.getSelectedItem();
        sauvegardes.supprimerGrille(s);
        cb_grilles.removeItem(s);
    }//GEN-LAST:event_b_supprimerActionPerformed

    //permet de changer de joueur
    private void b_nouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nouveauActionPerformed
        tf_nom.setEnabled(true);
        b_valider.setVisible(true);

    }//GEN-LAST:event_b_nouveauActionPerformed

    //résout la grille de jeu
    private void b_resoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_resoutActionPerformed
        if (grille != null) {
            grille.nettoyer();
            grille.reinitTest();
            grille.resolution();
            grille.afficher(tab_boutons);
            for (int i = 0; i < grille.getNlignes(); i++) {
                for (int j = 0; j < grille.getNcolonnes(); j++) {
                    tab_boutons[i][j].setEnabled(false);//on bloque les boutons
                }
            }
        }

    }//GEN-LAST:event_b_resoutActionPerformed

    //récupère le clique sur un bouton
    private void cliquer(java.awt.event.ActionEvent evt) {
        for (int i = 0; i < grille.getNlignes(); i++) {
            for (int j = 0; j < grille.getNcolonnes(); j++) {
                if (tab_boutons[i][j] == ((JButton) evt.getSource())) {
                    //si le joueur place une tente
                    if (grille.placerTente(i, j)) {
                        ntentes++;
                        ncoups++;
                    } else {
                        ntentes--;
                    }
                    grille.getPlateau()[i][j].afficher((JButton) evt.getSource());
                }
            }
        }

        //si le nombre de tentes correspond a celui de la solution
        if (ntentes == grille.getNtentes()) {
            grille.chercherTentes(tentes_placees);
            Iterator<Tente> i = tentes_placees.iterator();
            Iterator<Tente> j = grille.getTentes().iterator();
            int k = 0;
            while ((i.hasNext()) && (j.hasNext())) {
                if (i.next().identique(j.next())) {
                    k++;
                }
            }
            //si le joueur a resolut la grille
            if (k == grille.getNtentes()) {
                p_grille.removeAll();
                b_jouer.setVisible(true);
                heureFin = System.currentTimeMillis();
                nbreSec = (heureFin - heureDep) / 1000;
                String s = new String("GAGNE !\n" + "La partie a duré " + nbreSec
                        + " s.\nVous avez réussit en " + ncoups + " coups.");
                JOptionPane.showMessageDialog(this, s);
                joueur.setPoints(ncoups + nbreSec);
                scores.ajouterScore(joueur);
                ntentes = 0;
                ncoups = 0;
                grille = null;
                p_grille.repaint();
            }
        }
    }

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_jouer;
    private javax.swing.JButton b_nouveau;
    private javax.swing.JButton b_resout;
    private javax.swing.JButton b_sauve;
    private javax.swing.JButton b_supprimer;
    private javax.swing.JButton b_valider;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cb_grilles;
    private javax.swing.JButton charger;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel l_difficulte;
    private javax.swing.JPanel p_charger;
    private javax.swing.JPanel p_difficulte;
    private javax.swing.JPanel p_grille;
    private javax.swing.JRadioButton rb_difficile;
    private javax.swing.JRadioButton rb_facile;
    private javax.swing.JRadioButton rb_moyen;
    private javax.swing.JTextField tf_nom;
    // End of variables declaration//GEN-END:variables
}
